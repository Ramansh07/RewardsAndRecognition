server.port=8080
spring.application.name=rewardAndRecognition
#spring.datasource.url = jdbc:postgresql://localhost:5432/postgres
spring.datasource.url = jdbc:postgresql://rewardsandrecognition.c5eq8e8k6g5r.us-east-2.rds.amazonaws.com:5432/RewardsAndRecognition
#spring.datasource.username = postgres
spring.datasource.username = adminRnR
#spring.datasource.password = psql123
spring.datasource.password = psql1234
spring.jpa.hibernate.ddl-auto = update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
reward.creation.authority = 4
approval.min.level = 1
approval.max.level = 2
approval.min.authority = 4

spring.security.oauth2.client.registration.google.client-id=203997234736-361k0gt27s1ajb0drdn95oje95a0rd2u.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.redirect-uri=http://127.0.0.1:5500/
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub
jwt.secret = yourSecretShouldHidesecurelywithRewardsAndRecognitionPortal
jwt.expiration = 3600000




#spring.security.oauth2.client.registration.google.clientId = 203997234736-361k0gt27s1ajb0drdn95oje95a0rd2u.apps.googleusercontent.com
#spring.security.oauth2.client.registration.google.clientSecret = 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
#spring.security.oauth2.client.registration.google.redirectUri = http://127.0.0.1:5500/
